// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Test.Src.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Simular parcelamento de uma compra")]
    public partial class SimularParcelamentoDeUmaCompraFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SimularParcelamento.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-br"), "Simular parcelamento de uma compra", "        Como comprador\n        Quero simular os valores de uma compra cujo pagame" +
                    "nto será parcelado\n        Para saber se serei capaz de pagar o montante conform" +
                    "e meu orçamento mensal", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Simular parcelamento informando dados da compra")]
        public virtual void SimularParcelamentoInformandoDadosDaCompra()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simular parcelamento informando dados da compra", null, ((string[])(null)));
#line 8
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
        testRunner.Given("um comprador que informou os dados de uma compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 10
        testRunner.When("sistema simular a compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 11
        testRunner.Then("o sistema apresenta uma compra com as informações de quantidade de parcelas, valo" +
                    "r total, valor do juros e data da compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 12
        testRunner.And("um montante do valor total que sera pago", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 13
        testRunner.And("os valores do juros das parcelas podem ser representados em ate quatro casas deci" +
                    "mais", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 14
        testRunner.And("os valores da compra como o valor das parcelas e montante devem conter duas casas" +
                    " decimais", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 15
        testRunner.And("o valor do montante deve corresponder a soma dos valores das parcelas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 16
        testRunner.And("a diferença de valores do montante e da soma das parcelas deve ser inferior a um " +
                    "centavo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
